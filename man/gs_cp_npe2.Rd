% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs_cp_npe2.R
\name{gs_cp_npe2}
\alias{gs_cp_npe2}
\title{Conditional power computation with non-constant effect size for non-/crossing an upper boundary at analysis j given observed Z value at analysis i}
\usage{
gs_cp_npe2(theta = NULL, t = NULL, info = NULL, a = NULL, b = NULL, c = NULL)
}
\arguments{
\item{theta}{A vector of j-i+1, which specifies the natural parameter for treatment effect.
The first element of \code{theta} is the treatment effect of an interim analysis i.
The second element of \code{theta} is the treatment effect of an interim analysis i+1.
...
The last element of \code{theta} is the treatment effect of a future analysis j.}

\item{t}{A vector of j-i+1, which specifies the information fraction under the treatment effect \code{theta}.}

\item{info}{A vector of j-i+1, which specifies the statistical information under the treatment effect \code{theta}.}

\item{a}{A vector of length j-i, which specifies the futility bounds from analysis i+1 to analysis j.}

\item{b}{A vector of length j-i, which specifies the efficacy bounds from analysis i+1 to analysis j.}

\item{c}{Interim z-value at analysis i (scalar).}
}
\value{
A list of conditional powers: prob_alpha is a vector of c(alpha_i,i+1, ..., alpha_i,j-1, alpha_i,j), where alpha_i,j = \eqn{P(\{Z_j \geq b_j\} \& \{\cap_{m=i+1}^{j-1} a_m \leq Z_m < b_m\} \mid Z_i = c)}.
prob_alpha_plus is a vector of c(alpha^+_i,i+1, ..., alpha^+_i,j-1, alpha^+_i,j), where alpha^+_i,j = \eqn{P(\{Z_j \geq b_j\} \& \{\cap_{m=i+1}^{j-1} Z_m < b_m\} \mid Z_i = c)}.
prob_beta is a vector of c(beta_i,i+1, ..., beta_i,j-1, beta_i,j) where beta_i,j = \eqn{P(\{Z_j \leq b_j\} \& \{\cap_{m=i+1}^{j-1} a_m \leq Z_m < b_m\} \mid Z_i = c)}.
}
\description{
Conditional power computation with non-constant effect size for non-/crossing an upper boundary at analysis j given observed Z value at analysis i
}
\details{

}
\examples{
library(gsDesign2)
library(dplyr)
library(mvtnorm)
# Example 1 ----
# Calculate conditional power under arbitrary theta, info and lower/upper bound
# In practice, the value of theta and info commonly comes from a design.
# More examples are available at the pkgdown vignettes.
gs_cp_npe2(theta = c(0.1, 0.2, 0.3),
           t = c(0.15, 0.35, 0.6),
           info = c(15, 35, 60),
           a = c(-0.5, -0.5),
           b = c(1.8, 2.1),
           c = 1.5)

# Example 2
# original design ----
enroll_rate <- define_enroll_rate(duration = c(2, 2, 2, 18),
                                  rate = c(1, 2, 3, 4))
fail_rate <- define_fail_rate(duration = c(3, Inf),
                              fail_rate = log(2) / 10,
                              dropout_rate = 0.001,
                              hr = c(1, 0.7))
x <- gs_design_ahr(enroll_rate = enroll_rate, fail_rate = fail_rate,
                   alpha = 0.025, beta = 0.1, ratio = 1,
                   info_frac = c(0.4, 0.6, 0.8, 1), analysis_time = 30,
                   binding = FALSE,
                   upper = "gs_spending_bound",
                   upar = list(sf = "sfLDOF", total_spend = 0.025, param = NULL),
                   lower = "gs_b",
                   lpar = c(-Inf, -Inf, -Inf),
                   h1_spending = TRUE,
                   test_lower = FALSE,
                   info_scale = "h0_h1_info") |> to_integer()

# calculate conditional power
# case 1: currently at IA1, compute conditional power at IA2
gs_cp_npe2(# IA1 and IA2's theta
           theta = x$analysis$theta[1:2],
           # IA1 and IA2's information fraction
           t = x$analysis$info_frac[1:2],
           # IA1 and IA2's statistical information
           info = x$analysis$info[1:2],
           # IA2's futility bound
           a = -Inf,
           # IA2's efficacy bound
           b = x$bound$z[x$bound$bound == "upper" & x$bound$analysis == 2],
           # IA1's Z-score
           c = -gsDesign::hrn2z(hr = 0.8, n = 150+180, ratio = 1))

# case 2: currently at IA1, compute conditional power at IA2 and IA3
gs_cp_npe2(# IA1, IA2 and IA3's theta
           theta = x$analysis$theta[1:3],
           # IA1, IA2 and IA3's information fraction
           t = x$analysis$info_frac[1:3],
           # IA1, IA2, and IA3's statistical information
           info = x$analysis$info[1:3],
           # IA2 and IA3's futility bound
           a = c(-Inf, Inf),
           # IA2 and IA3's efficacy bound
           b = x$bound$z[x$bound$bound == "upper" & x$bound$analysis \%in\% c(2, 3)],
           # IA1's Z-score
           c = -gsDesign::hrn2z(hr = 0.8, n = 150+180, ratio = 1))

# case 3: currently at IA1, compute conditional power at IA2, IA3 and FA
gs_cp_npe2(# IA1, IA2, IA3 and FA's theta
           theta = x$analysis$theta[1:3],
           # IA1, IA2, IA3 and FA's information fraction
           t = x$analysis$info_frac[1:3],
           # IA1, IA2, IA3 and FA's statistical information
           info = x$analysis$info[1:3],
           # IA2, IA3 and FA's futility bound
           a = c(-Inf, Inf),
           # IA2, IA3 and FA's efficacy bound
           b = x$bound$z[x$bound$bound == "upper" & x$bound$analysis \%in\% c(2, 3)],
           # IA1's Z-score
           c = -gsDesign::hrn2z(hr = 0.8, n = 150+180, ratio = 1))
}
