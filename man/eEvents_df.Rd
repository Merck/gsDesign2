% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eEvents_df.R
\name{eEvents_df}
\alias{eEvents_df}
\title{Expected events observed under piecewise exponential model}
\usage{
eEvents_df(
  enrollRates = tibble::tibble(duration = c(2, 2, 10), rate = c(3, 6, 9)),
  failRates = tibble::tibble(duration = c(3, 100), failRate = log(2)/c(9, 18),
    dropoutRate = rep(0.001, 2)),
  totalDuration = 25,
  simple = TRUE
)
}
\arguments{
\item{enrollRates}{Enrollment rates; see details and examples}

\item{failRates}{Failure rates and dropout rates by period}

\item{totalDuration}{Total follow-up from start of enrollment to data cutoff}

\item{simple}{If default (TRUE), return numeric expected number of events, otherwise
a \code{tibble} as described below.}
}
\value{
The default when \code{simple=TRUE} is to return the total expected number of events as a real number.
Otherwise, when \code{simple=FALSE} a \code{tibble} is returned with the following variables for each period specified in 'failRates':
\code{t} start of period,
\code{failRate} failure rate during the period
\code{Events} expected events during the period,

The records in the returned \code{tibble} correspond to the input \code{tibble} \code{failRates}.
}
\description{
\code{eEvents_df} computes expected events over time and by strata
under the assumption of piecewise constant enrollment rates and piecewise
exponential failure and censoring rates.
The piecewise exponential distribution allows a simple method to specify a distribtuion
and enrollment pattern
where the enrollment, failure and dropout rates changes over time.
While the main purpose may be to generate a trial that can be analyzed at a single point in time or
using group sequential methods, the routine can also be used to simulate an adaptive trial design.
The intent is to enable sample size calculations under non-proportional hazards assumptions
for stratified populations.
}
\details{
More periods will generally be supplied in output than those that are input.
The intent is to enable expected event calculations in a tidy format to
maximize flexibility for a variety of purposes.
}
\section{Specification}{

\if{latex}{
 \itemize{
   \item Validate if input enrollment rate contains total duration column.
   \item Validate if input enrollment rate contains rate column.
   \item Validate if input failure rate contains duration column.
   \item Validate if input failure rate contains failure rate column.
   \item Validate if input failure rate contains dropout rate column.
   \item Validate if input trial total follow-up (total duration) is a non-empty vector of positive integers.
   \item Validate if input simple is logical.
   \item Define a tibble with the start opening for enrollment at zero and cumulative duration.
   Add the event (or failure) time corresponding to the start of the enrollment. Finally, add the enrollment rate to the tibble
   corresponding to the start and end (failure) time. This will be recursively used to calculate the expected
   number of events later. For details, see vignette/eEventsTheory.Rmd
   \item Define a tibble including the cumulative duration of failure rates, the corresponding start time of
   the enrollment, failure rate and dropout rates.  For details, see vignette/eEventsTheory.Rmd
   \item Only consider the failure rates in the interval of the end failure rate and total duration.
   \item Compute the failure rates over time using \code{stepfun} which is used
    to group rows by periods defined by failRates.
   \item Compute the dropout rate over time using \code{stepfun}.
   \item Compute the enrollment rate over time using \code{stepfun}. Details are
   available in vignette/eEventsTheory.Rmd.
   \item Compute expected events by interval at risk using the notations and descriptions in
   vignette/eEventsTheory.Rmd.
   \item Return \code{eEvents_df}
 }
}
}

\examples{
library(tibble)
# Default arguments, simple output (total event count only)
eEvents_df()
# Event count by time period
eEvents_df(simple=FALSE)
# Early cutoff
eEvents_df(totalDuration=.5)
# Single time period example
eEvents_df(enrollRates=tibble(duration=10,rate=10),
           failRates=tibble(duration=100,failRate=log(2)/6,dropoutRate=.01),
           totalDuration=22,
           simple=FALSE
           )
# Single time period example, multiple enrolment periods
eEvents_df(enrollRates=tibble(duration=c(5,5), rate=c(10,20)),
           failRates=tibble(duration=100,failRate=log(2)/6,dropoutRate=.01),
           totalDuration=22,
           simple=FALSE
           )
}
