% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/text_summary.R
\name{text_summary}
\alias{text_summary}
\title{Summarize group sequential design into a text paragraph.}
\usage{
text_summary(x, information = FALSE, time_unit = "months")
}
\arguments{
\item{x}{A design created by either \code{\link[=gs_design_ahr]{gs_design_ahr()}} or \code{\link[=gs_design_wlr]{gs_design_wlr()}} with or without \code{\link[=to_integer]{to_integer()}}.}

\item{information}{A logical value specifying whether to display the information or not.}

\item{time_unit}{A character specifying the time unit used for the design, like "months"(default), "weeks", "years".}
}
\value{
A paragraph summarizing the designs.
}
\description{
Summarize group sequential design into a text paragraph.
}
\examples{
library(gsDesign)

# Text summary of a 1-sided design
x <- gs_design_ahr(info_frac = 1:3/3, test_lower = FALSE)
x |> text_summary()
x |> to_integer() |>text_summary()

# Text summary of a 2-sided symmetric design
x <- gs_design_ahr(info_frac = 1:3/3,
                   upper = gs_spending_bound, lower = gs_spending_bound,
                   upar = list(sf = sfLDOF, total_spend = 0.025),
                   lpar = list(sf = sfLDOF, total_spend = 0.025),
                   binding = TRUE, h1_spending = FALSE) |> to_integer()
x |> text_summary()

# Text summary of a asymmetric 2-sided design with beta-spending and non-binding futility bound
x <- gs_design_ahr(info_frac = 1:3/3, alpha = 0.025, beta = 0.1,
                   upper = gs_spending_bound, lower = gs_spending_bound,
                   upar = list(sf = sfLDOF, total_spend = 0.025),
                   lpar = list(sf = sfHSD, total_spend = 0.1, param = -4),
                   binding = FALSE, h1_spending = TRUE) |> to_integer()
x |> text_summary()

# Text summary of a asymmetric 2-sided design with fixed non-binding futility bound
x <- gs_design_ahr(info_frac = 1:3/3, alpha = 0.025, beta = 0.1,
                   upper = gs_spending_bound, lower = gs_b,
                   upar = list(sf = sfLDOF, total_spend = 0.025),
                   test_upper = c(FALSE, TRUE, TRUE),
                   lpar = c(-1, -Inf, -Inf),
                   test_lower = c(TRUE, FALSE, FALSE),
                   binding = FALSE, h1_spending = TRUE) |> to_integer()
x |> text_summary()
}
